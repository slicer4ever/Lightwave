R"(#module Pixel DirectX11_1

struct Pixel{
	float4 Position : SV_POSITION;
	float4 TexCoord : TEXCOORD0;
};

float4 SampleMS(Texture2DMS<float4> Tex, float2 TexCoord){
	uint Width, Height, SampleCount;
	Tex.GetDimensions(Width, Height, SampleCount);
	float iSamplerCount = 1.0f/float(SampleCount);
	int2 T = int2(TexCoord.x*Width, TexCoord.y*Height);
	float4 Value = float4(0.0f, 0.0f, 0.0f, 0.0f);
	[loop][fastopt]
	for(uint i=0;i<SampleCount;i++){
		Value += Tex.Load(T, i);
	}
	return Value*iSamplerCount;
}

Texture2DMS<float4> Tex;
float4 main(Pixel In) : SV_TARGET{
	return SampleMS(Tex, In.TexCoord.xy).rgba;
};

#module Pixel OpenGL4_5 OpenGL3_3
#version 450
in vec4 pTexCoord;
out vec4 oColor;
uniform sampler2DMS Tex;

vec4 texture(sampler2DMS Tex, vec2 TexCoord){
	int SamplerCount = textureSamples(Tex);
	float iSamplerCount = 1.0f/float(SamplerCount);
	
	ivec2 T = ivec2(textureSize(Tex)*TexCoord);
	vec4 Color = vec4(0.0f);
	for(int i=0;i<SamplerCount;i++){
		Color+=texelFetch(Tex, T, i);
	}
	return Color*iSamplerCount;
}

void main(void){
	oColor = texture(Tex, pTexCoord.xy);
	return;
})",