R"(#module Pixel DirectX11_1
	struct Pixel {
	float4 Position : SV_POSITION;
	float4 Color : COLOR0;
	float4 TexCoordA : TEXCOORD0;
	float4 TexCoordB : TEXCOORD1;
};
Texture2D Tex;
SamplerState TexSampler;
float4 DecodeYUV(float2 TexCoordY, float2 TexCoordU, float2 TexCoordV) {
	float Y = Tex.Sample(TexSampler, TexCoordY).r;
	float U = Tex.Sample(TexSampler, TexCoordU).r - 0.5f;
	float V = Tex.Sample(TexSampler, TexCoordV).r - 0.5f;
	float R = Y + 1.402f*V;
	float G = Y - 0.344f*U - 0.714f*V;
	float B = Y + 1.722f*U;
	return float4(R, G, B, 1.0f);
}
float4 main(Pixel In) : SV_TARGET{
	return DecodeYUV(In.TexCoordA.xy, In.TexCoordA.zw, In.TexCoordB.xy)*In.Color;
}
#module Pixel OpenGL3_3 OpenGL4_5
#version 330
in vec4 pColor;
in vec4 pTexCoordA;
in vec4 pTexCoordB;
uniform sampler2D Tex;
out vec4 p_Color | 0 | Output;
vec4 DecodeYUV(vec2 TexCoordY, vec2 TexCoordU, vec2 TexCoordV) {
	float Y = texture2D(Tex, TexCoordY).r;
	float U = texture2D(Tex, TexCoordU).r - 0.5f;
	float V = texture2D(Tex, TexCoordV).r - 0.5f;
	float R = Y + 1.402f*V;
	float G = Y - 0.344f*U - 0.714f*V;
	float B = Y + 1.722f*U;
	return vec4(R, G, B, 1.0f);
}
void main(void) {
	p_Color = DecodeYUV(pTexCoordA.xy, pTexCoordA.zw, pTexCoordB.xy)*pColor;
}
#module Pixel OpenGL2_1
varying vec4 pColor;
varying vec4 pTexCoordA;
varying vec4 pTexCoordB;
uniform sampler2D Tex;
vec4 DecodeYUV(vec2 TexCoordY, vec2 TexCoordU, vec2 TexCoordV) {
	float Y = texture(Tex, TexCoordY).r;
	float U = texture(Tex, TexCoordU).r - 0.5f;
	float V = texture(Tex, TexCoordV).r - 0.5f;
	float R = Y + 1.402f*V;
	float G = Y - 0.344f*U - 0.714f*V;
	float B = Y + 1.722f*U;
	return vec4(R, G, B, 1.0f);
}
void main(void) {
	gl_FragColor = DecodeYUV(pTexCoordA.xy, pTexCoordA.zw, pTexCoordB.xy)*pColor;
}
#module Pixel OpenGLES2
varying lowp vec4 pColor;
varying lowp vec4 pTexCoordA;
varying lowp vec4 pTexCoordB;
uniform sampler2D Tex;
vec4 DecodeYUV(vec2 TexCoordY, vec2 TexCoordU, vec2 TexCoordV) {
	float Y = texture(Tex, TexCoordY).r;
	float U = texture(Tex, TexCoordU).r - 0.5f;
	float V = texture(Tex, TexCoordV).r - 0.5f;
	float R = Y + 1.402f*V;
	float G = Y - 0.344f*U - 0.714f*V;
	float B = Y + 1.722f*U;
	return vec4(R, G, B, 1.0f);
}
void main(void) {
	gl_FragColor = DecodeYUV(pTexCoordA.xy, pTexCoordA.zw, pTexCoordB.xy)*pColor;
})",