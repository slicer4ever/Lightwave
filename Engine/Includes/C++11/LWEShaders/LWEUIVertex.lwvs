R"(#module Vertex DirectX11_1
cbuffer UIUniform{
	float4x4 Matrix;
};
struct Vertex {
	float4 Position : POSITION;
	float4 Color : COLOR;
	float4 TexCoord : TEXCOORD;
};
struct Pixel {
	float4 Position : SV_POSITION;
	float4 Color : COLOR0;
	float4 TexCoord : TEXCOORD0;
};
Pixel main(Vertex In) {
	Pixel O;
	O.Position = mul(Matrix, In.Position);
	O.Color = In.Color;
	O.TexCoord = In.TexCoord;
	return O;
}
#module Vertex OpenGL3_3 OpenGL4_5
#version 330
layout(std140) uniform UIUniform {
	mat4 Matrix;
};
in vec4 Position;
in vec4 Color;
in vec4 TexCoord;
out vec4 pColor;
out vec4 pTexCoord;
void main(void) {
	gl_Position = Matrix*Position;
	pColor = Color;
	pTexCoord = TexCoord;
}
#module Vertex OpenGL2_1
struct UB0{
	mat4 Matrix;
};

attribute vec4 Position;
attribute vec4 Color;
attribute vec4 TexCoord;
varying vec4 pColor;
varying vec4 pTexCoord;
uniform UB0 UIBuffer;
void main(void) {
	gl_Position = UIBuffer.Matrix*Position;
	pColor = Color;
	pTexCoord = TexCoord;
}
#module Vertex OpenGLES2
struct UB0{
	highp mat4 Matrix;
};

attribute highp vec4 Position;
attribute lowp vec4 Color;
attribute lowp vec4 TexCoord;
varying lowp vec4 pColor;
varying lowp vec4 pTexCoord;

uniform UB0 UIBuffer;
void main(void) {
	gl_Position = UIBuffer.Matrix*Position;
	pColor = Color;
	pTexCoord = TexCoord;
})",